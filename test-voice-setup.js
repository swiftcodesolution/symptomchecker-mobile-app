// Test script to verify voice recognition setup
import { ExpoSpeechRecognitionModule } from "expo-speech-recognition"

const testVoiceRecognition = async () => {
  console.log("Testing voice recognition setup...")
  
  try {
    // Check if module is available
    if (!ExpoSpeechRecognitionModule) {
      console.error("‚ùå ExpoSpeechRecognitionModule is not available")
      return false
    }
    
    console.log("‚úÖ ExpoSpeechRecognitionModule is available")
    
    // Check if requestPermissionsAsync is available
    if (!ExpoSpeechRecognitionModule.requestPermissionsAsync) {
      console.error("‚ùå requestPermissionsAsync is not available")
      return false
    }
    
    console.log("‚úÖ requestPermissionsAsync is available")
    
    // Test permissions
    const { status } = await ExpoSpeechRecognitionModule.requestPermissionsAsync()
    console.log("üìã Permission status:", status)
    
    if (status !== "granted") {
      console.warn("‚ö†Ô∏è Permissions not granted")
      return false
    }
    
    console.log("‚úÖ Permissions granted")
    
    // Test if start method is available
    if (!ExpoSpeechRecognitionModule.start) {
      console.error("‚ùå start method is not available")
      return false
    }
    
    console.log("‚úÖ start method is available")
    
    // Test if stop method is available
    if (!ExpoSpeechRecognitionModule.stop) {
      console.error("‚ùå stop method is not available")
      return false
    }
    
    console.log("‚úÖ stop method is available")
    
    console.log("üéâ Voice recognition setup is working correctly!")
    return true
    
  } catch (error) {
    console.error("‚ùå Error testing voice recognition:", error)
    return false
  }
}

export default testVoiceRecognition
